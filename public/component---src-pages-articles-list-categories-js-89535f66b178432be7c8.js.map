{"version":3,"sources":["webpack:///./src/modules/articles/useHook.js","webpack:///./src/pages/Articles/List/Categories.js"],"names":["useArticles","dispatch","useDispatch","_articles","useSelector","state","articles","dispatchClearArticles","a","loadArticles","dispatchClearSelected","setSelected","dispatchLoadMostVisited","mostVisited","length","api","fetchMostVisited","docs","loadMostVisited","dispatchLoadMostRecent","mostRecent","fetchMostRecent","loadMostRecent","dispatchLoadArticlesByCategory","categoryId","fetchArticlesByCategory","categories","name","console","log","dispatchLoadArticlesByString","str","fetchArticlesByString","dispatchLoadCategories","isFetched","fetchCategories","loadCategories","dispatchSetIsFetched","dispatchSetSelected","id","updateViewsById","dispatchLoadArticleById","fetchArticleById","article","payload","setIsFetched","Categories","className","Object","values","map","_id","href","key","onClick","e","preventDefault","handleClick"],"mappings":"wgBA2HeA,IAhHK,WAChB,IAAMC,EAAWC,cAEXC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAGvCC,EAAqB,6BAAG,sBAAAC,EAAA,sDAC1BP,EAASQ,YAAa,KADI,2CAAH,qDAIrBC,EAAqB,6BAAG,sBAAAF,EAAA,sDAC1BP,EAASU,YAAY,OADK,2CAAH,qDAGrBC,EAAuB,6BAAG,4BAAAJ,EAAA,yDACS,IAAjCL,EAAUU,YAAYC,OADE,gCAELC,cAAMC,mBAFD,OAElBC,EAFkB,OAGxBhB,EAASiB,YAAgBD,IAHD,2CAAH,qDAMvBE,EAAsB,6BAAG,4BAAAX,EAAA,yDACS,IAAhCL,EAAUiB,WAAWN,OADE,0CAGAC,cAAMM,kBAHN,OAGbJ,EAHa,OAInBhB,EAASqB,YAAeL,IAJL,yGAAH,qDAYtBM,EAA8B,6BAAG,WAAOC,GAAP,eAAAhB,EAAA,+EAEZO,cAAMU,wBAAwBD,EAAYrB,EAAUuB,WAAWF,GAAYG,MAF/D,OAEzBV,EAFyB,OAG/BhB,EAASQ,YAAaQ,IAHS,gDAM/BW,QAAQC,IAAI,UAAZ,MAN+B,yDAAH,sDAW9BC,EAA4B,6BAAG,WAAOC,GAAP,eAAAvB,EAAA,+EAEVO,cAAMiB,sBAAsBD,GAFlB,OAEvBd,EAFuB,OAG7BhB,EAASQ,YAAaQ,IAHO,uGAAH,sDAY5BgB,EAAsB,6BAAG,4BAAAzB,EAAA,kEAElBL,EAAU+B,UAFQ,gCAGAnB,cAAMoB,kBAHN,OAGblB,EAHa,OAInBhB,EAASmC,YAAenB,IACxBoB,GAAqB,GALF,uDASvBT,QAAQC,IAAI,UAAZ,MATuB,yDAAH,qDAatBS,EAAmB,6BAAG,WAAOC,GAAP,SAAA/B,EAAA,6DACxBP,EAASU,YAAY4B,IADG,kBAIVxB,cAAMyB,gBAAgBD,GAJZ,8GAAH,sDAYnBE,EAAuB,6BAAG,WAAOF,GAAP,eAAA/B,EAAA,+EAEFO,cAAM2B,iBAAiBH,GAFrB,OAElBI,EAFkB,OAGxBL,EAAoBK,GAHI,gDAMxBf,QAAQC,IAAI,UAAZ,MANwB,yDAAH,sDAWvBQ,EAAuB,SAACO,GAC1B3C,EAAS4C,YAAaD,KAI1B,MAAO,CAAC,OAAD,UACEzC,GACL,CACI8B,yBACArB,0BACAO,yBACAZ,wBACAG,wBACA4B,sBACAD,uBACAd,iCACAkB,0BACAX,mC,gIC3FGgB,UAxBI,WAAO,IAAD,EAEwC9C,cAApD0B,EAFY,KAEZA,WAAgBH,EAFJ,KAEIA,+BAMzB,OACI,wBAAIwB,UAAU,4BACTC,OAAOC,OAAOvB,GAAYwB,KAAI,gBAAGC,EAAH,EAAGA,IAAKxB,EAAR,EAAQA,KAAR,OAE1B,uBACGyB,KAAK,IACLC,IAAKF,EACLG,QAAS,SAACC,GAAD,OAZL,SAACA,EAAGhB,GACpBgB,EAAEC,iBACFjC,EAA+BgB,GAUHkB,CAAYF,EAAGJ,IAC/BJ,UAAU,0CACTpB","file":"component---src-pages-articles-list-categories-js-89535f66b178432be7c8.js","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { api } from '../../util';\nimport {\n    loadMostVisited,\n    loadMostRecent,\n    loadCategories,\n    loadArticles,\n    setSelected,\n    setIsFetched\n} from './actions'\n\nconst useArticles = () => {\n    const dispatch = useDispatch();\n\n    const _articles = useSelector(state => state.articles);\n\n\n    const dispatchClearArticles = async () => {\n        dispatch(loadArticles({}))\n    };\n\n    const dispatchClearSelected = async () => {\n        dispatch(setSelected(null));\n    };\n    const dispatchLoadMostVisited = async () => {\n        if (_articles.mostVisited.length === 0) {\n            const docs = await api().fetchMostVisited();\n            dispatch(loadMostVisited(docs))\n        }\n    };\n    const dispatchLoadMostRecent = async () => {\n        if (_articles.mostRecent.length === 0) {\n            try {\n                const docs = await api().fetchMostRecent();\n                dispatch(loadMostRecent(docs))\n            }\n            catch (error) {\n\n            }\n        }\n    };\n\n    const dispatchLoadArticlesByCategory = async (categoryId) => {\n        try {\n            const docs = await api().fetchArticlesByCategory(categoryId, _articles.categories[categoryId].name);\n            dispatch(loadArticles(docs))\n        }\n        catch (error) {\n            console.log('error: ', error);\n\n        }\n    };\n\n    const dispatchLoadArticlesByString = async (str) => {\n        try {\n            const docs = await api().fetchArticlesByString(str);\n            dispatch(loadArticles(docs))\n        }\n        catch (error) {\n\n        }\n\n    };\n\n\n    const dispatchLoadCategories = async () => {\n        try {\n            if (!_articles.isFetched) {\n                const docs = await api().fetchCategories();\n                dispatch(loadCategories(docs));\n                dispatchSetIsFetched(true);\n            }\n        }\n        catch (error) {\n            console.log('error: ', error);\n        }\n    };\n\n    const dispatchSetSelected = async (id) => {\n        dispatch(setSelected(id));\n        try {\n            if (process.env.NODE_ENV === 'production') {\n                await api().updateViewsById(id);\n            }\n        }\n        catch (error) {\n\n        }\n    };\n\n    const dispatchLoadArticleById = async (id) => {\n        try {\n            const article = await api().fetchArticleById(id);\n            dispatchSetSelected(article);\n        }\n        catch (error) {\n            console.log('error: ', error);\n        }\n    };\n\n\n    const dispatchSetIsFetched = (payload) => {\n        dispatch(setIsFetched(payload));\n    };\n\n\n    return [\n        { ..._articles },\n        {\n            dispatchLoadCategories,\n            dispatchLoadMostVisited,\n            dispatchLoadMostRecent,\n            dispatchClearArticles,\n            dispatchClearSelected,\n            dispatchSetSelected,\n            dispatchSetIsFetched,\n            dispatchLoadArticlesByCategory,\n            dispatchLoadArticleById,\n            dispatchLoadArticlesByString\n        }\n    ]\n}\n\nexport default useArticles;","import React from 'react';\nimport useArticles from '../../../modules/articles/useHook';\n\nconst Categories = () => {\n\n    const [{ categories }, { dispatchLoadArticlesByCategory }] = useArticles();\n    const handleClick = (e, id) => {\n        e.preventDefault();\n        dispatchLoadArticlesByCategory(id);\n    }\n\n    return (\n        <ul className=\"list-group overflow-auto\">\n            {Object.values(categories).map(({ _id, name }) =>\n                // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                (<a\n                    href=\"#\"\n                    key={_id}\n                    onClick={(e) => handleClick(e, _id)}\n                    className='list-group-item list-group-item-action'>\n                    {name}\n                </a>)\n            )}\n        </ul>\n    )\n};\n\nexport default Categories;"],"sourceRoot":""}