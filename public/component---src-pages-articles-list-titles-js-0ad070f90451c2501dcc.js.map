{"version":3,"sources":["webpack:///./src/pages/Articles/List/Titles.js","webpack:///./src/modules/articles/useHook.js"],"names":["Titles","useArticles","list","selected","dispatchClearArticles","className","onClick","e","preventDefault","Object","values","map","_id","title","category","subtitle","console","log","key","to","normalizeString","dispatch","useDispatch","_articles","useSelector","state","articles","a","loadArticles","dispatchClearSelected","setSelected","dispatchLoadMostVisited","mostVisited","length","api","fetchMostVisited","docs","loadMostVisited","dispatchLoadMostRecent","mostRecent","fetchMostRecent","loadMostRecent","dispatchLoadArticlesByCategory","categoryId","fetchArticlesByCategory","categories","name","dispatchLoadArticlesByString","str","fetchArticlesByString","dispatchLoadCategories","isFetched","fetchCategories","loadCategories","dispatchSetIsFetched","dispatchSetSelected","id","updateViewsById","dispatchLoadArticleById","fetchArticleById","article","payload","setIsFetched"],"mappings":"yMAwCeA,UAlCA,WAAM,MAEuCC,cAFvC,OAERC,EAFQ,EAERA,KAAMC,EAFE,EAEFA,SAAcC,EAFZ,KAEYA,sBAK7B,OACI,oCACI,4BAAQC,UAAU,mCAAmCC,QANzC,SAACC,GACjBA,EAAEC,iBACFJ,MAKQ,uBAAGC,UAAU,sBAEjB,wBAAIA,UAAU,cACTI,OAAOC,OAAOR,GAAMS,KAAI,YAAyC,IAAtCC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAK9C,OAJAC,QAAQC,IAAI,QAASL,GACrBI,QAAQC,IAAI,aAAcd,GAC1Ba,QAAQC,IAAI,sBAAuBd,IAAaS,GAG5C,kBAAC,OAAD,CACIM,IAAKN,EACLP,UAAS,2CAA4CF,IAAaS,EAAM,2BAA6B,IACrGO,GAAE,eAAiBC,YAAgBN,GAAjC,IAA8CM,YAAgBP,IAChE,wBAAIR,UAAU,QAAQQ,GACtB,uBAAGR,UAAU,QAAQU,W,+cC6FlCd,IAhHK,WAChB,IAAMoB,EAAWC,cAEXC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAGvCtB,EAAqB,6BAAG,sBAAAuB,EAAA,sDAC1BN,EAASO,YAAa,KADI,2CAAH,qDAIrBC,EAAqB,6BAAG,sBAAAF,EAAA,sDAC1BN,EAASS,YAAY,OADK,2CAAH,qDAGrBC,EAAuB,6BAAG,4BAAAJ,EAAA,yDACS,IAAjCJ,EAAUS,YAAYC,OADE,gCAELC,cAAMC,mBAFD,OAElBC,EAFkB,OAGxBf,EAASgB,YAAgBD,IAHD,2CAAH,qDAMvBE,EAAsB,6BAAG,4BAAAX,EAAA,yDACS,IAAhCJ,EAAUgB,WAAWN,OADE,0CAGAC,cAAMM,kBAHN,OAGbJ,EAHa,OAInBf,EAASoB,YAAeL,IAJL,yGAAH,qDAYtBM,EAA8B,6BAAG,WAAOC,GAAP,eAAAhB,EAAA,+EAEZO,cAAMU,wBAAwBD,EAAYpB,EAAUsB,WAAWF,GAAYG,MAF/D,OAEzBV,EAFyB,OAG/Bf,EAASO,YAAaQ,IAHS,gDAM/BpB,QAAQC,IAAI,UAAZ,MAN+B,yDAAH,sDAW9B8B,EAA4B,6BAAG,WAAOC,GAAP,eAAArB,EAAA,+EAEVO,cAAMe,sBAAsBD,GAFlB,OAEvBZ,EAFuB,OAG7Bf,EAASO,YAAaQ,IAHO,uGAAH,sDAY5Bc,EAAsB,6BAAG,4BAAAvB,EAAA,kEAElBJ,EAAU4B,UAFQ,gCAGAjB,cAAMkB,kBAHN,OAGbhB,EAHa,OAInBf,EAASgC,YAAejB,IACxBkB,GAAqB,GALF,uDASvBtC,QAAQC,IAAI,UAAZ,MATuB,yDAAH,qDAatBsC,EAAmB,6BAAG,WAAOC,GAAP,SAAA7B,EAAA,6DACxBN,EAASS,YAAY0B,IADG,kBAIVtB,cAAMuB,gBAAgBD,GAJZ,8GAAH,sDAYnBE,EAAuB,6BAAG,WAAOF,GAAP,eAAA7B,EAAA,+EAEFO,cAAMyB,iBAAiBH,GAFrB,OAElBI,EAFkB,OAGxBL,EAAoBK,GAHI,gDAMxB5C,QAAQC,IAAI,UAAZ,MANwB,yDAAH,sDAWvBqC,EAAuB,SAACO,GAC1BxC,EAASyC,YAAaD,KAI1B,MAAO,CAAC,OAAD,UACEtC,GACL,CACI2B,yBACAnB,0BACAO,yBACAlC,wBACAyB,wBACA0B,sBACAD,uBACAZ,iCACAgB,0BACAX","file":"component---src-pages-articles-list-titles-js-0ad070f90451c2501dcc.js","sourcesContent":["import React from 'react';\nimport useArticles from '../../../modules/articles/useHook';\n//import { useHistory } from \"react-router-dom\";\nimport { Link } from \"gatsby\"\nimport { normalizeString } from '../../../util';\n\nconst Titles = () => {\n    //const history = useHistory();\n    const [{ list, selected }, { dispatchClearArticles }] = useArticles();\n    const handleClick = (e) => {\n        e.preventDefault();\n        dispatchClearArticles()\n    };\n    return (\n        <>\n            <button className=\"btn btn-primary btn-lg btn-block\" onClick={handleClick}>\n                <i className=\"fa fa-arrow-left\"></i>\n            </button>\n            <ul className=\"list-group\">\n                {Object.values(list).map(({ _id, title, category, subtitle }) => {\n                    console.log('_id: ', _id);\n                    console.log('selected: ', selected);\n                    console.log('selected === _id : ', selected === _id );\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                    return (\n                        <Link\n                            key={_id}\n                            className={`list-group-item list-group-item-action ${selected === _id ? 'list-group-item-selected' : ''}`}\n                            to={`/categories/${normalizeString(category)}/${normalizeString(title)}`}>\n                            <h5 className=\"mb-1\">{title}</h5>\n                            <p className=\"mb-1\">{subtitle}</p>\n                        </Link>\n                    )\n                }\n                )}\n            </ul>\n        </>\n    )\n};\n\nexport default Titles;","import { useDispatch, useSelector } from 'react-redux';\nimport { api } from '../../util';\nimport {\n    loadMostVisited,\n    loadMostRecent,\n    loadCategories,\n    loadArticles,\n    setSelected,\n    setIsFetched\n} from './actions'\n\nconst useArticles = () => {\n    const dispatch = useDispatch();\n\n    const _articles = useSelector(state => state.articles);\n\n\n    const dispatchClearArticles = async () => {\n        dispatch(loadArticles({}))\n    };\n\n    const dispatchClearSelected = async () => {\n        dispatch(setSelected(null));\n    };\n    const dispatchLoadMostVisited = async () => {\n        if (_articles.mostVisited.length === 0) {\n            const docs = await api().fetchMostVisited();\n            dispatch(loadMostVisited(docs))\n        }\n    };\n    const dispatchLoadMostRecent = async () => {\n        if (_articles.mostRecent.length === 0) {\n            try {\n                const docs = await api().fetchMostRecent();\n                dispatch(loadMostRecent(docs))\n            }\n            catch (error) {\n\n            }\n        }\n    };\n\n    const dispatchLoadArticlesByCategory = async (categoryId) => {\n        try {\n            const docs = await api().fetchArticlesByCategory(categoryId, _articles.categories[categoryId].name);\n            dispatch(loadArticles(docs))\n        }\n        catch (error) {\n            console.log('error: ', error);\n\n        }\n    };\n\n    const dispatchLoadArticlesByString = async (str) => {\n        try {\n            const docs = await api().fetchArticlesByString(str);\n            dispatch(loadArticles(docs))\n        }\n        catch (error) {\n\n        }\n\n    };\n\n\n    const dispatchLoadCategories = async () => {\n        try {\n            if (!_articles.isFetched) {\n                const docs = await api().fetchCategories();\n                dispatch(loadCategories(docs));\n                dispatchSetIsFetched(true);\n            }\n        }\n        catch (error) {\n            console.log('error: ', error);\n        }\n    };\n\n    const dispatchSetSelected = async (id) => {\n        dispatch(setSelected(id));\n        try {\n            if (process.env.NODE_ENV === 'production') {\n                await api().updateViewsById(id);\n            }\n        }\n        catch (error) {\n\n        }\n    };\n\n    const dispatchLoadArticleById = async (id) => {\n        try {\n            const article = await api().fetchArticleById(id);\n            dispatchSetSelected(article);\n        }\n        catch (error) {\n            console.log('error: ', error);\n        }\n    };\n\n\n    const dispatchSetIsFetched = (payload) => {\n        dispatch(setIsFetched(payload));\n    };\n\n\n    return [\n        { ..._articles },\n        {\n            dispatchLoadCategories,\n            dispatchLoadMostVisited,\n            dispatchLoadMostRecent,\n            dispatchClearArticles,\n            dispatchClearSelected,\n            dispatchSetSelected,\n            dispatchSetIsFetched,\n            dispatchLoadArticlesByCategory,\n            dispatchLoadArticleById,\n            dispatchLoadArticlesByString\n        }\n    ]\n}\n\nexport default useArticles;"],"sourceRoot":""}