{"version":3,"sources":["webpack:///./src/pages/Sections/SectionContact.js","webpack:///./src/mail/index.js","webpack:///./src/modules/ui/alert/useHook.js","webpack:///./src/components/ContactUs.js"],"names":["SectionContact","className","id","data-key","sendMail","name","phone","email","message","fetch","method","body","JSON","stringify","useAlert","data","useSelector","state","ui","alert","dispatch","useDispatch","dispatchHideAlert","hideAlert","dispatchShowAlert","content","type","handlerEvent","showAlert","ContactUs","useState","formErrors","values","setValues","handleInput","e","target","value","validateField","fieldName","length","match","replace","handleSubmit","a","key","preventDefault","invalid","onSubmit","onChange","onBlur","placeholder","required"],"mappings":"4FAAA,4CAkCeA,UA/BQ,WAEnB,OACI,6BAASC,UAAU,eAAeC,GAAG,WACjC,yBAAKD,UAAU,aACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,kCAAd,YACA,wBAAIA,UAAU,iCAAd,uCAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,yBAAyBC,GAAG,iBAAiBC,WAAS,qBAIjF,yBAAKF,UAAU,OACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,kCAAd,iBACA,wBAAIA,UAAU,iCAAd,kDAGR,yBAAKA,UAAU,aACf,kBAAC,IAAD,U,wJC5BD,SAASG,EAASC,EAAMC,EAAOC,EAAOC,GAEjD,OAAOC,MAAM,0BAA2B,CACpCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBR,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,QAASA,M,4BCwCNM,EAjCE,WAEb,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,GAAGC,SACrCC,EAAWC,cAaXC,EAAoB,WACtBF,EAASG,gBAMb,MAAO,CAAC,OAAD,UACER,GACL,CACIS,kBAlBkB,SAACC,EAASC,GAChC,IAAMC,EAAeL,EACrBF,EAASQ,YAAU,CAAEH,UAASC,OAAMC,mBAiBhCL,uB,yHCwEGO,IA7GG,WAAO,IAAD,EAEmBf,IAAvBU,GAFI,UAEJA,mBAFI,EAGQM,mBAAS,CACjCzB,KAAM,GACNE,MAAO,GACPD,MAAO,GACPE,QAAS,GACTuB,WAAY,CAAE1B,KAAM,KAAME,MAAO,KAAMD,MAAO,KAAME,QAAS,QAL1DwB,EAHa,KAGLC,EAHK,KAWdC,EAAc,SAACC,GACjB,IAAM9B,EAAO8B,EAAEC,OAAO/B,KAChBgC,EAAQF,EAAEC,OAAOC,MACvBC,EAAcjC,EAAMgC,IAGlBC,EAAgB,SAACC,EAAWF,GAAW,IAAD,EACpCN,EAAaC,EAAOD,WAGxB,GAFAA,EAAWQ,GAA8B,IAAjBF,EAAMG,OAAe,wBAA0B,MAElET,EAAWQ,GACZ,OAAQA,GACJ,IAAK,QAEGR,EAAWxB,MAAQ8B,EAAMI,MAAM,wCAA0C,KAAO,kBAChF,MAER,IAAK,QAGGJ,EAAQA,EAAMK,QAAQ,aAAc,IACpCX,EAAWzB,MAAQ+B,EAAMI,MAAM,UAAY,KAAO,qBAQlER,EAAU,OAAD,UAAMD,IAAN,MAAeO,GAAYF,EAA3B,EAAkCN,WAAlC,iBAAmDA,GAAnD,MAGPY,EAAY,e,EAAA,G,EAAA,UAAG,WAAOR,GAAP,yBAAAS,EAAA,sDAIjB,IAAWC,KAFXV,EAAEW,iBACEC,GAAU,EACIf,EAAOD,WACS,MAA1BC,EAAOD,WAAWc,KAClBE,GAAU,GAND,GAQZA,EARY,wBASL1C,EAAgC2B,EAAhC3B,KAAME,EAA0ByB,EAA1BzB,MAAOD,EAAmB0B,EAAnB1B,MAAOE,EAAYwB,EAAZxB,QATf,kBAWHJ,EAASC,EAAMC,EAAOC,EAAOC,GAX1B,OAYTgB,EAAkB,mDAClBS,EAAU,CACN5B,KAAM,GACNE,MAAO,GACPD,MAAO,GACPE,QAAS,GACTuB,WAAY,CAAE1B,KAAM,KAAME,MAAO,KAAMD,MAAO,KAAME,QAAS,QAlBxD,kDAsBTgB,EAAkB,gDAAiD,WAtB1D,yD,+KAAH,sDA2BVnB,EAA4C2B,EAA5C3B,KAAME,EAAsCyB,EAAtCzB,MAAOD,EAA+B0B,EAA/B1B,MAAOE,EAAwBwB,EAAxBxB,QAASuB,EAAeC,EAAfD,WAErC,OACI,yBAAK9B,UAAU,OACX,yBAAKA,UAAU,aACX,0BAAM+C,SAAUL,GACZ,yBAAK1C,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,2BAAOA,UAAU,eAAeI,KAAK,OAAO4C,SAAUf,EAAagB,OAAQ,kBAAMZ,EAAc,OAAQjC,IAAOqB,KAAK,OAAOyB,YAAY,cAAcC,SAAS,WAAWf,MAAOhC,IAC/K,uBAAGJ,UAAU,0BAA0B8B,EAAW1B,OAEtD,yBAAKJ,UAAU,cACX,2BAAOA,UAAU,eAAeI,KAAK,QAAQ4C,SAAUf,EAAagB,OAAQ,kBAAMZ,EAAc,QAAS/B,IAAQmB,KAAK,QAAQyB,YAAY,cAAcC,SAAS,WAAWf,MAAO9B,IACnL,uBAAGN,UAAU,0BAA0B8B,EAAWxB,QAEtD,yBAAKN,UAAU,cACX,2BAAOA,UAAU,eAAeI,KAAK,QAAQ4C,SAAUf,EAAagB,OAAQ,kBAAMZ,EAAc,QAAShC,IAAQoB,KAAK,MAAMyB,YAAY,gBAAgBC,SAAS,WAAWf,MAAO/B,IACnL,uBAAGL,UAAU,0BAA0B8B,EAAWzB,SAG1D,yBAAKL,UAAU,YACX,yBAAKA,UAAU,cACX,8BAAUA,UAAU,eAAeI,KAAK,UAAU4C,SAAUf,EAAagB,OAAQ,kBAAMZ,EAAc,UAAW9B,IAAU2C,YAAY,eAAeC,SAAS,WAAWf,MAAO7B,IAChL,uBAAGP,UAAU,0BAA0B8B,EAAWvB,WAG1D,yBAAKP,UAAU,aACf,yBAAKA,UAAU,yBACX,yBAAKC,GAAG,YACR,4BAAQA,GAAG,oBAAoBD,UAAU,wCAAwCyB,KAAK,UAAtF","file":"component---src-pages-sections-section-contact-js-78e002443a9cd49656d5.js","sourcesContent":["import React from 'react';\nimport ContactUs from '../../components/ContactUs';\n\nconst SectionContact = () => {\n\n    return (\n        <section className=\"page-section\" id=\"contact\">\n            <div className=\"container\">\n                <div className=\"call-us\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12 text-center\">\n                            <h2 className=\"section-heading text-uppercase\">Llamanos</h2>\n                            <h3 className=\"section-subheading text-muted\">Y te asistiremos lo antes posible</h3>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <div className=\"clickme-button web_btn\" id=\"clickme-button\" data-key=\"paola-galindo\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-12 text-center\">\n                        <h2 className=\"section-heading text-uppercase\">Ó Contactanos</h2>\n                        <h3 className=\"section-subheading text-muted\">Dejanos tus datos para ponernos en contacto.</h3>\n                    </div>\n                </div>\n                <div className=\"clearfix\"></div>\n                <ContactUs />\n            </div>\n        </section>\n    );\n}\n\nexport default SectionContact;","export default function sendMail(name, phone, email, message) {\n\n    return fetch(\"././mail/contact_me.php\", {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify({\n            name: name,\n            phone: phone,\n            email: email,\n            message: message\n        }) // data can be `string` or {object}!\n    })\n}","/**\n * HOOKs -> Datos de Alerta\n *\n */\n\n// Dependencias\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Actions\nimport { showAlert, hideAlert } from './actions';\n\n/**\n * Hook\n *\n */\nconst useAlert = () => {\n\n    const data = useSelector(state => state.ui.alert);\n    const dispatch = useDispatch();\n\n    /**\n     * Muestra el elemento UI de alerta\n     */\n    const dispatchShowAlert = (content, type) => {\n        const handlerEvent = dispatchHideAlert;\n        dispatch(showAlert({ content, type, handlerEvent }));\n    };\n\n    /**\n     * Oculta el elemento UI de alerta\n     */\n    const dispatchHideAlert = () => {\n        dispatch(hideAlert());\n    };\n\n\n\n    // Retorna una matriz con el estado y los métodos disponibles\n    return [\n        { ...data },\n        {\n            dispatchShowAlert,\n            dispatchHideAlert\n        }\n    ];\n\n};\n\nexport default useAlert;","import React, { useState } from 'react';\nimport sendMail from '../mail';\n\nimport useAlert from '../modules/ui/alert/useHook';\n\nconst ContactUs = () => {\n\n    const [alert, { dispatchShowAlert }] = useAlert();\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        message: '',\n        formErrors: { name: null, email: null, phone: null, message: null }\n    })\n\n    const handleInput = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        validateField(name, value);\n    }\n\n    const validateField = (fieldName, value) => {\n        let formErrors = values.formErrors;\n        formErrors[fieldName] = value.length === 0 ? ' No puede estar vacio' : null;\n\n        if (!formErrors[fieldName]) {\n            switch (fieldName) {\n                case 'email':\n                    {\n                        formErrors.email = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) ? null : ' Email invalido'\n                        break;\n                    }\n                case 'phone':\n                    {\n                        // eslint-disable-next-line no-useless-escape\n                        value = value.replace(/[^0-9\\+]+/g, \"\");\n                        formErrors.phone = value.match(/[0-9]/i) ? null : ' Teléfono invalido'\n                        break;\n                    }\n                default:\n                    break;\n            }\n        }\n\n        setValues({ ...values, [fieldName]: value, formErrors: { ...formErrors } })\n    }\n\n    const handleSubmit = async (e) => {\n\n        e.preventDefault();\n        let invalid = false;\n        for (const key in values.formErrors) {\n            if (values.formErrors[key] != null)\n                invalid = true;\n        }\n        if (!invalid) {\n            const { name, email, phone, message } = values;\n            try {\n                await sendMail(name, phone, email, message)\n                dispatchShowAlert(\"Enviado Exitosamente. Nos pondremos en contacto\");\n                setValues({\n                    name: '',\n                    email: '',\n                    phone: '',\n                    message: '',\n                    formErrors: { name: null, email: null, phone: null, message: null }\n                })\n            }\n            catch (error) {\n                dispatchShowAlert(\"No se ha enviado, vuelve a intentar mas tarde\", 'warning');\n            }\n        }\n    }\n\n    const { name, email, phone, message, formErrors } = values;\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-lg-12\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <input className=\"form-control\" name=\"name\" onChange={handleInput} onBlur={() => validateField('name', name)} type=\"text\" placeholder=\"Tu nombre *\" required=\"required\" value={name} />\n                                <p className=\"help-block text-danger\">{formErrors.name}</p>\n                            </div>\n                            <div className=\"form-group\">\n                                <input className=\"form-control\" name=\"email\" onChange={handleInput} onBlur={() => validateField('email', email)} type=\"email\" placeholder=\"Tu correo *\" required=\"required\" value={email} />\n                                <p className=\"help-block text-danger\">{formErrors.email}</p>\n                            </div>\n                            <div className=\"form-group\">\n                                <input className=\"form-control\" name=\"phone\" onChange={handleInput} onBlur={() => validateField('phone', phone)} type=\"tel\" placeholder=\"Tu teléfono *\" required=\"required\" value={phone} />\n                                <p className=\"help-block text-danger\">{formErrors.phone}</p>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <textarea className=\"form-control\" name=\"message\" onChange={handleInput} onBlur={() => validateField('message', message)} placeholder=\"Tu mensaje *\" required=\"required\" value={message}></textarea>\n                                <p className=\"help-block text-danger\">{formErrors.message}</p>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"></div>\n                        <div className=\"col-lg-12 text-center\">\n                            <div id=\"success\"></div>\n                            <button id=\"sendMessageButton\" className=\"btn btn-primary btn-xl text-uppercase\" type=\"submit\">Enviar mensaje</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n};\n\nexport default ContactUs;"],"sourceRoot":""}